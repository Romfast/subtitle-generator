worker_processes 1;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        
        # Health check fără autentificare
        location = /health {
            proxy_pass http://backend:5000/api/test;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Frontend principal cu Basic Auth
        location / {
            # Basic Auth - se sare dacă fișierul nu există
            auth_basic "Generator Subtitrari - Acces Restrictionat";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket pentru React development
        location /ws {
            auth_basic "Generator Subtitrari - Acces Restrictionat";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://frontend:3000/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Sockjs pentru React Hot Reload
        location /sockjs-node {
            auth_basic "Generator Subtitrari - Acces Restrictionat";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://frontend:3000/sockjs-node;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Backend API cu Basic Auth
        location /api/ {
            auth_basic "Generator Subtitrari - Acces Restrictionat";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://backend:5000/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts pentru upload-uri mari
            proxy_read_timeout 3600;
            proxy_connect_timeout 3600;
            proxy_send_timeout 3600;
            client_body_timeout 3600;
            client_max_body_size 3000M;
            
            # Headers pentru debugging
            add_header X-Debug-Message "Proxied to backend" always;
        }
    }
}